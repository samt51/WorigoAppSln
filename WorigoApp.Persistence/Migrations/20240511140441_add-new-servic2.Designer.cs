// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorigoApp.Persistence.Context;

#nullable disable

namespace WorigoApp.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240511140441_add-new-servic2")]
    partial class addnewservic2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorigoApp.Domain.Entites.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(2744),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(2753),
                            Name = "Worigo"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(2756),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(2756),
                            Name = "Ramada"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.ContentsOfFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("ContentsOfFood");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4562),
                            HotelId = 1,
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4568),
                            Name = "Ön Büro Resepsiyon Departmanı"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4572),
                            HotelId = 1,
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4572),
                            Name = "Housekeeping Departmanı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4573),
                            HotelId = 1,
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4573),
                            Name = "Yiyecek İçecek ve Mutfak Departmanı"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4574),
                            HotelId = 1,
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4574),
                            Name = "Teknik Servis Departmanı"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4575),
                            HotelId = 1,
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(4575),
                            Name = "Sağlık Kulübü & Spa Departmanı"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("HotelId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.EmployeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExitDateOfWork")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FloorNo")
                        .HasColumnType("int");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastOnlineTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnlineOrOfflineNow")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateOfWork")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeDetail");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HotelId");

                    b.ToTable("EmployeeType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5679),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5681),
                            Name = "Ön Büro Müdürü"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5683),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5683),
                            Name = "Gece Müdürü"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5684),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5684),
                            Name = "Ön Büro Şefi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5685),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5685),
                            Name = "Resepsiyonist"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5686),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5686),
                            Name = "Concierge Şefi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5686),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5686),
                            Name = "Taşıyıcı/Karşılayıcı Personel"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5687),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5687),
                            Name = "Guest Service Agent"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5688),
                            DepartmentId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5688),
                            Name = "Guest Relation"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5688),
                            DepartmentId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5689),
                            Name = "HK Müdürü"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5689),
                            DepartmentId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5689),
                            Name = "Housekeeper"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5690),
                            DepartmentId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5690),
                            Name = "Kat Şefi (Floor Supervisor)"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5690),
                            DepartmentId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5690),
                            Name = "Oda Görevlisi"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5691),
                            DepartmentId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5691),
                            Name = "Meydancı"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5691),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5692),
                            Name = "Yiyecek – İçecek Müdürü"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5692),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5692),
                            Name = "Barlar Şefi"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5693),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5693),
                            Name = "Bar Personeli"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5693),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5694),
                            Name = "Mutfak Şefi"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5694),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5694),
                            Name = "Mutfak Personeli"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5695),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5695),
                            Name = "Restoran Şefi"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5695),
                            DepartmentId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5696),
                            Name = "Servis Personeli"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5696),
                            DepartmentId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5696),
                            Name = "Teknik Müdür"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5697),
                            DepartmentId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5697),
                            Name = "Elektrik Tekniker"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5697),
                            DepartmentId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5697),
                            Name = "Mekanik Tekniker"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5698),
                            DepartmentId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(5698),
                            Name = "Tesisatçı"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodMenuCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FoodMenuCategoryId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.FoodMenuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("FoodMenuCategory");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.FoodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomFoodTypeEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoodType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7185),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7186),
                            RoomFoodTypeEnum = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7187),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7188),
                            RoomFoodTypeEnum = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7189),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7189),
                            RoomFoodTypeEnum = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7189),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7190),
                            RoomFoodTypeEnum = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7190),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7191),
                            RoomFoodTypeEnum = 5
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.BellBoy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BellBoy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7674),
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(7675),
                            Name = "Bagaj Taşıma"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlootNo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Connection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(8080),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(8081),
                            Name = "1q2w3e4r5t"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.DryCleaner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DryCleaner");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.FeedBackAndSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FeedBack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FeedBackAndSurveys");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.HotelInformationAndAnnouncements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HotelInformationAndAnnouncements");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.HouseKeeping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseKeeping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(9720),
                            ImageUrl = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(9722),
                            Name = "Havlu değişimi veya eksiği"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(9724),
                            ImageUrl = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(9724),
                            Name = "Oda Genel temizlik"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(9725),
                            ImageUrl = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 842, DateTimeKind.Local).AddTicks(9725),
                            Name = "Çarşaf veya yatak yüzü değişimi"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.SpaMassage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SpaMassage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(243),
                            Description = "Uzak Doğu Masajı",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(243),
                            Name = "Uzak Doğu",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(245),
                            Description = "Tailand Masajı",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(245),
                            Name = "Tailand Masajı",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.GServices.TechnicalNeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechnicalNeed");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(617),
                            Description = "Klima ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(618),
                            Name = "Klima"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(619),
                            Description = "TV ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(619),
                            Name = "TV"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(620),
                            Description = "Minibar ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(620),
                            Name = "Minibar"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(621),
                            Description = "Kapı ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(621),
                            Name = "Kapı"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(622),
                            Description = "Elektirk ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(622),
                            Name = "Elektrik"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(622),
                            Description = "Aydınlatma ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(623),
                            Name = "Aydınlatma"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(623),
                            Description = "Aydınlatma ile arıza durumları",
                            ImageUrl = "1.jpeg",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(623),
                            Name = "Duş Ve Tuvalet"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Companyid")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStar")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Companyid");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Bağcılar",
                            Companyid = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(971),
                            Email = "tekstilkent@ramada.com",
                            IsActive = true,
                            IsDeleted = false,
                            Location = "Giyimkent",
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(972),
                            Name = "Tekstilkent",
                            NumberOfStar = 4,
                            PhoneNumber = "02126733520"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImageCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImageCategoryId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.ImageCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("ImageCategory");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("LogEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3423),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3425),
                            Name = "SystemAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3426),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3427),
                            Name = "HotelAdmin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3427),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3427),
                            Name = "Management"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3428),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3428),
                            Name = "DepartmentManager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3428),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3429),
                            Name = "Employee"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3429),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3429),
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomFoodTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomFoodTypeId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomTypeEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3856),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3856),
                            RoomTypeEnum = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3857),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3858),
                            RoomTypeEnum = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3858),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3859),
                            RoomTypeEnum = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3859),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3860),
                            RoomTypeEnum = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3860),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3860),
                            RoomTypeEnum = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3861),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3861),
                            RoomTypeEnum = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3862),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3862),
                            RoomTypeEnum = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3862),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3863),
                            RoomTypeEnum = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3863),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3863),
                            RoomTypeEnum = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3864),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3864),
                            RoomTypeEnum = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3865),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(2024, 5, 11, 17, 4, 40, 843, DateTimeKind.Local).AddTicks(3865),
                            RoomTypeEnum = 11
                        });
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.ContentsOfFood", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Food", "Food")
                        .WithMany("ContentsOfFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Department", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Employee", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.EmployeeType", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("WorigoApp.Domain.Entites.Hotel", "Hotel")
                        .WithMany("Employees")
                        .HasForeignKey("HotelId");

                    b.Navigation("EmployeeType");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.EmployeeDetail", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Employee", "Employee")
                        .WithOne("EmployeeDetail")
                        .HasForeignKey("WorigoApp.Domain.Entites.EmployeeDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.EmployeeType", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Department", "Department")
                        .WithMany("EmployeeTypes")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorigoApp.Domain.Entites.Hotel", null)
                        .WithMany("Departments")
                        .HasForeignKey("HotelId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Food", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.FoodMenuCategory", "FoodMenuCategory")
                        .WithMany("Foods")
                        .HasForeignKey("FoodMenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodMenuCategory");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.FoodMenuCategory", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Hotel", "Hotel")
                        .WithMany("FoodMenuCategories")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Hotel", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Company", "Company")
                        .WithMany("Hotels")
                        .HasForeignKey("Companyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Image", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.ImageCategory", "ImageCategory")
                        .WithMany("Images")
                        .HasForeignKey("ImageCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageCategory");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.ImageCategory", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Hotel", "Hotel")
                        .WithMany("ImageCategories")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Room", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorigoApp.Domain.Entites.FoodType", "RoomFoodType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomFoodTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorigoApp.Domain.Entites.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomFoodType");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Users", b =>
                {
                    b.HasOne("WorigoApp.Domain.Entites.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Company", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Department", b =>
                {
                    b.Navigation("EmployeeTypes");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Employee", b =>
                {
                    b.Navigation("EmployeeDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.EmployeeType", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Food", b =>
                {
                    b.Navigation("ContentsOfFoods");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.FoodMenuCategory", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.FoodType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Hotel", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");

                    b.Navigation("FoodMenuCategories");

                    b.Navigation("ImageCategories");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.ImageCategory", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WorigoApp.Domain.Entites.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
